{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class UpdateProductComponent {\n  constructor(apiService, _snackBar, router) {\n    this.apiService = apiService;\n    this._snackBar = _snackBar;\n    this.router = router;\n  }\n  updateProduct(payload, id) {\n    this.apiService.updateProductData(id, payload).subscribe(response => {\n      this.updateProductResponse = response;\n      console.log('updated data:', this.updateProductResponse);\n      this.showAlert('Product updated successfully');\n    }, error => {\n      console.error('Error while updating data:', error);\n      this.showAlert('Error while updating data, Please try again');\n    });\n  }\n  showAlert(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n  }\n  static #_ = this.ɵfac = function UpdateProductComponent_Factory(t) {\n    return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProductComponent,\n    selectors: [[\"app-update-product\"]],\n    decls: 32,\n    vars: 1,\n    consts: [[1, \"toolbar\"], [1, \"products-text\"], [1, \"card-container\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"rows\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"category\", \"formControlName\", \"category\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"stock\", \"formControlName\", \"stock\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"brand\", \"formControlName\", \"brand\", \"required\", \"\"], [\"mat-button\", \"\"]],\n    template: function UpdateProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"p\", 1);\n        i0.ɵɵtext(3, \"Add Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.addProductDetails();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Product Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Product Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 5);\n        i0.ɵɵtext(16, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 5);\n        i0.ɵɵtext(24, \"Stock: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 5);\n        i0.ɵɵtext(28, \"Brand:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 12);\n        i0.ɵɵtext(31, \"Add Product\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;AAUA,OAAM,MAAOA,sBAAsB;EAIjCC,YACUC,UAAsB,EACtBC,SAAsB,EACtBC,MAAc;IAFd,eAAU,GAAVF,UAAU;IACV,cAAS,GAATC,SAAS;IACT,WAAM,GAANC,MAAM;EACb;EACHC,aAAa,CAACC,OAAY,EAAEC,EAAU;IACpC,IAAI,CAACL,UAAU,CAACM,iBAAiB,CAACD,EAAE,EAAED,OAAO,CAAC,CAACG,SAAS,CACrDC,QAAQ,IAAI;MACX,IAAI,CAACC,qBAAqB,GAAGD,QAAQ;MACrCE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACF,qBAAqB,CAAC;MACxD,IAAI,CAACG,SAAS,CAAC,8BAA8B,CAAC;IAChD,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAI,CAACD,SAAS,CAAC,6CAA6C,CAAC;IAC/D,CAAC,CACF;EACH;EACAA,SAAS,CAACE,OAAe;IACvB,IAAI,CAACb,SAAS,CAACc,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;EAAC;qBA5BUpB,sBAAsB;EAAA;EAAA;UAAtBA,sBAAsB;IAAAqB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCVnCC,2BAAK;QAEwBA,2BAAW;QAAAA,iBAAI;QAE1CA,8BAA4B;QACCA;UAAA,OAAYC,uBAAmB;QAAA,EAAC;QACvDD,8BAAkB;QACAA,6BAAa;QAAAA,iBAAQ;QACvCA,2BAA6D;QAC7DA,iBAAM;QACNA,+BAAkB;QACAA,qCAAoB;QAAAA,iBAAQ;QAC9CA,4BAA2E;QAC3EA,iBAAM;QACNA,+BAAkB;QACAA,uBAAM;QAAAA,iBAAQ;QAChCA,4BAA+D;QAC/DA,iBAAM;QACNA,+BAAkB;QACAA,0BAAS;QAAAA,iBAAQ;QACnCA,4BAAqE;QACrEA,iBAAM;QACNA,+BAAkB;QACAA,wBAAO;QAAAA,iBAAQ;QACjCA,6BAA+D;QAC/DA,iBAAM;QACNA,+BAAkB;QACAA,uBAAM;QAAAA,iBAAQ;QAChCA,6BAA+D;QAC/DA,iBAAM;QACNA,mCAAmB;QAAAA,4BAAW;QAAAA,iBAAS;;;QAzBrCA,eAAoB;QAApBA,sCAAoB","names":["UpdateProductComponent","constructor","apiService","_snackBar","router","updateProduct","payload","id","updateProductData","subscribe","response","updateProductResponse","console","log","showAlert","error","message","open","duration","verticalPosition","horizontalPosition","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.ts","/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css'],\n})\nexport class UpdateProductComponent {\n  data: any;\n  deleteProductResponse: any;\n  updateProductResponse: any;\n  constructor(\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n  updateProduct(payload: any, id: number): void {\n    this.apiService.updateProductData(id, payload).subscribe(\n      (response) => {\n        this.updateProductResponse = response;\n        console.log('updated data:', this.updateProductResponse);\n        this.showAlert('Product updated successfully');\n      },\n      (error) => {\n        console.error('Error while updating data:', error);\n        this.showAlert('Error while updating data, Please try again');\n      }\n    );\n  }\n  showAlert(message: string): void {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n    });\n  }\n}\n","<div>\n  <div class=\"toolbar\">\n    <p class=\"products-text\">Add Product</p>\n  </div>\n  <div class=\"card-container\">\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"addProductDetails()\" class=\"card\">\n        <div class=\"rows\"> \n        <label for=\"name\">Product Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Product Description:</label>\n        <input type=\"text\" id=\"description\" formControlName=\"description\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Price:</label>\n        <input type=\"text\" id=\"price\" formControlName=\"price\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Category:</label>\n        <input type=\"text\" id=\"category\" formControlName=\"category\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Stock: </label>\n        <input type=\"text\" id=\"stock\" formControlName=\"stock\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Brand:</label>\n        <input type=\"text\" id=\"brand\" formControlName=\"brand\" required>\n        </div>\n        <button mat-button>Add Product</button>\n    </form>\n\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}