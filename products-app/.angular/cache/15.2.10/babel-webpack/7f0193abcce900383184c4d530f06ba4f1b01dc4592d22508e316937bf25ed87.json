{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nexport class UpdateProductComponent {\n  constructor(apiService, _snackBar, router, route, fb) {\n    this.apiService = apiService;\n    this._snackBar = _snackBar;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      stock: ['', Validators.required],\n      brand: ['', Validators.required],\n      category: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe(params => {\n      const productData = JSON.parse(params['productData']);\n      if (productData) {\n        this.data = productData;\n      }\n    });\n  }\n  updateProductDetails(id) {\n    if (this.myForm.valid) {\n      const formData = this.myForm.value;\n      console.log('updated form data is >>', formData);\n      this.apiService.updateProductData(id, formData).subscribe(response => {\n        this.updateProductResponse = response;\n        console.log('updated data:', this.updateProductResponse);\n        this.showAlert('Product updated successfully');\n      }, error => {\n        console.error('Error while updating data:', error);\n        this.showAlert('Error while updating data, Please try again');\n      });\n    }\n  }\n  showAlert(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n  }\n  static #_ = this.ɵfac = function UpdateProductComponent_Factory(t) {\n    return new (t || UpdateProductComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateProductComponent,\n    selectors: [[\"app-update-product\"]],\n    decls: 32,\n    vars: 1,\n    consts: [[1, \"toolbar\"], [1, \"products-text\"], [1, \"card-container\"], [1, \"card\", 3, \"formGroup\", \"ngSubmit\"], [1, \"rows\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", \"value\", \"{`${data.title}`}\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"price\", \"formControlName\", \"price\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"category\", \"formControlName\", \"category\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"stock\", \"formControlName\", \"stock\", \"required\", \"\"], [\"type\", \"text\", \"id\", \"brand\", \"formControlName\", \"brand\", \"required\", \"\"], [\"mat-button\", \"\"]],\n    template: function UpdateProductComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"div\", 0)(2, \"p\", 1);\n        i0.ɵɵtext(3, \"Update Product\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateProductComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.updateProductDetails(ctx.data.id);\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Product Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 5);\n        i0.ɵɵtext(12, \"Product Description:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"label\", 5);\n        i0.ɵɵtext(16, \"Price:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 5);\n        i0.ɵɵtext(20, \"Category:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 5);\n        i0.ɵɵtext(24, \"Stock: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 4)(27, \"label\", 5);\n        i0.ɵɵtext(28, \"Brand:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(29, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"button\", 12);\n        i0.ɵɵtext(31, \"Update Product\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.myForm);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\".toolbar[_ngcontent-%COMP%] {\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    height: 60px;\\n    display: flex;\\n    align-items: center;\\n    background-color: #1976d2;\\n    color: white;\\n    font-weight: 600;justify-content: center;\\n  }\\n  .products-text[_ngcontent-%COMP%] {\\n   text-align: center;\\n  justify-content: center;\\n  align-items: center;\\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\\n  font-size: large;\\n}\\n.card-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  margin-top: 5%;\\n  align-items: center;\\n  align-self: center;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  width: 50%; \\n  margin-bottom: 20px; \\n  padding: 10px;\\n  align-items: center;\\n  align-self: center;\\n}\\n.rows[_ngcontent-%COMP%] {\\n    flex-direction: row;\\n    justify-content: space-between;\\n    align-self: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXBkYXRlLXByb2R1Y3QvdXBkYXRlLXByb2R1Y3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixNQUFNO0lBQ04sT0FBTztJQUNQLFFBQVE7SUFDUixZQUFZO0lBQ1osYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGdCQUFnQixDQUFDLHVCQUF1QjtFQUMxQztFQUNBO0dBQ0Msa0JBQWtCO0VBQ25CLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsNEVBQTRFO0VBQzVFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZiw4QkFBOEI7RUFDOUIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVLEVBQUUsK0JBQStCO0VBQzNDLG1CQUFtQixFQUFFLDZCQUE2QjtFQUNsRCxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLGtCQUFrQjtBQUNwQjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLDhCQUE4QjtJQUM5QixrQkFBa0I7QUFDdEIiLCJzb3VyY2VzQ29udGVudCI6WyIudG9vbGJhciB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIGhlaWdodDogNjBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzE5NzZkMjtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgfVxuICAucHJvZHVjdHMtdGV4dCB7XG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LWZhbWlseTonR2lsbCBTYW5zJywgJ0dpbGwgU2FucyBNVCcsIENhbGlicmksICdUcmVidWNoZXQgTVMnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IGxhcmdlO1xufVxuLmNhcmQtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIG1hcmdpbi10b3A6IDUlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG5cbi5jYXJkIHtcbiAgd2lkdGg6IDUwJTsgLyogQWRqdXN0IHRoZSB3aWR0aCBhcyBuZWVkZWQgKi9cbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgLyogQWRkIG1hcmdpbiBiZXR3ZWVuIGNhcmRzICovXG4gIHBhZGRpbmc6IDEwcHg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cbi5yb3dzIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","UpdateProductComponent","constructor","apiService","_snackBar","router","route","fb","myForm","group","name","required","description","price","stock","brand","category","ngOnInit","queryParams","subscribe","params","productData","JSON","parse","data","updateProductDetails","id","valid","formData","value","console","log","updateProductData","response","updateProductResponse","showAlert","error","message","open","duration","verticalPosition","horizontalPosition","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.ts","/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css'],\n})\nexport class UpdateProductComponent implements OnInit {\n  data: any;\n  updateProductResponse: any;\n  myForm: FormGroup;\n  constructor(\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n  ) {\n     this.myForm = this.fb.group({\n       name: ['', Validators.required],\n       description: ['', Validators.required],\n       price: ['', Validators.required],\n       stock: ['', Validators.required],\n       brand: ['', Validators.required],\n       category: ['', Validators.required],\n     });\n  }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe((params: any) => {\n      const productData = JSON.parse(params['productData']);\n      if (productData) {\n        this.data = productData;\n      }\n    });\n  }\n  updateProductDetails(id: number): void {\n    if (this.myForm.valid) {\n      const formData = this.myForm.value;\n      console.log('updated form data is >>', formData);\n    this.apiService.updateProductData(id, formData).subscribe(\n      (response) => {\n        this.updateProductResponse = response;\n        console.log('updated data:', this.updateProductResponse);\n        this.showAlert('Product updated successfully');\n      },\n      (error) => {\n        console.error('Error while updating data:', error);\n        this.showAlert('Error while updating data, Please try again');\n      }\n    );\n    }\n  }\n  showAlert(message: string): void {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n    });\n  }\n}\n","<div>\n  <div class=\"toolbar\">\n    <p class=\"products-text\">Update Product</p>\n  </div>\n  <div class=\"card-container\">\n    <form [formGroup]=\"myForm\" (ngSubmit)=\"updateProductDetails(data.id)\" class=\"card\">\n        <div class=\"rows\"> \n        <label for=\"name\">Product Name:</label>\n        <input type=\"text\" id=\"name\" formControlName=\"name\" value={`${data.title}`} required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Product Description:</label>\n        <input type=\"text\" id=\"description\" formControlName=\"description\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Price:</label>\n        <input type=\"text\" id=\"price\" formControlName=\"price\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Category:</label>\n        <input type=\"text\" id=\"category\" formControlName=\"category\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Stock: </label>\n        <input type=\"text\" id=\"stock\" formControlName=\"stock\" required>\n        </div>\n        <div class=\"rows\">\n        <label for=\"name\">Brand:</label>\n        <input type=\"text\" id=\"brand\" formControlName=\"brand\" required>\n        </div>\n        <button mat-button>Update Product</button>\n    </form>\n\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}