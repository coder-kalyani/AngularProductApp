{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet UpdateProductComponent = class UpdateProductComponent {\n  constructor(apiService, _snackBar, router, route, fb) {\n    this.apiService = apiService;\n    this._snackBar = _snackBar;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.myForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      stock: ['', Validators.required],\n      brand: ['', Validators.required],\n      category: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe(params => {\n      const productData = JSON.parse(params['productData']);\n      if (productData) {\n        this.data = productData;\n      }\n    });\n  }\n  updateProductDetails(payload, id) {\n    this.apiService.updateProductData(id, payload).subscribe(response => {\n      this.updateProductResponse = response;\n      console.log('updated data:', this.updateProductResponse);\n      this.showAlert('Product updated successfully');\n    }, error => {\n      console.error('Error while updating data:', error);\n      this.showAlert('Error while updating data, Please try again');\n    });\n  }\n  showAlert(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n  }\n};\nUpdateProductComponent = __decorate([Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})], UpdateProductComponent);\nexport { UpdateProductComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,YACUC,UAAsB,EACtBC,SAAsB,EACtBC,MAAc,EACdC,KAAqB,EACrBC,EAAe;IAJf,eAAU,GAAVJ,UAAU;IACV,cAAS,GAATC,SAAS;IACT,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,OAAE,GAAFC,EAAE;IAET,IAAI,CAACC,MAAM,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC1BC,IAAI,EAAE,CAAC,EAAE,EAAEC,UAAU,CAACC,QAAQ,CAAC;MAC/BC,WAAW,EAAE,CAAC,EAAE,EAAEF,UAAU,CAACC,QAAQ,CAAC;MACtCE,KAAK,EAAE,CAAC,EAAE,EAAEH,UAAU,CAACC,QAAQ,CAAC;MAChCG,KAAK,EAAE,CAAC,EAAE,EAAEJ,UAAU,CAACC,QAAQ,CAAC;MAChCI,KAAK,EAAE,CAAC,EAAE,EAAEL,UAAU,CAACC,QAAQ,CAAC;MAChCK,QAAQ,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACC,QAAQ;KACnC,CAAC;EACL;EACAM,QAAQ;IACN,IAAI,CAACZ,KAAK,CAACa,WAAW,CAACC,SAAS;IAChC,IAAI,CAACd,KAAK,CAACa,WAAW,CAACC,SAAS,CAAEC,MAAW,IAAI;MAC/C,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAAC,aAAa,CAAC,CAAC;MAErD,IAAIC,WAAW,EAAE;QACf,IAAI,CAACG,IAAI,GAAGH,WAAW;;IAE3B,CAAC,CAAC;EACJ;EACAI,oBAAoB,CAACC,OAAY,EAAEC,EAAU;IAC3C,IAAI,CAACzB,UAAU,CAAC0B,iBAAiB,CAACD,EAAE,EAAED,OAAO,CAAC,CAACP,SAAS,CACrDU,QAAQ,IAAI;MACX,IAAI,CAACC,qBAAqB,GAAGD,QAAQ;MACrCE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACF,qBAAqB,CAAC;MACxD,IAAI,CAACG,SAAS,CAAC,8BAA8B,CAAC;IAChD,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,IAAI,CAACD,SAAS,CAAC,6CAA6C,CAAC;IAC/D,CAAC,CACF;EACH;EACAA,SAAS,CAACE,OAAe;IACvB,IAAI,CAAChC,SAAS,CAACiC,IAAI,CAACD,OAAO,EAAE,OAAO,EAAE;MACpCE,QAAQ,EAAE,IAAI;MACdC,gBAAgB,EAAE,KAAK;MACvBC,kBAAkB,EAAE;KACrB,CAAC;EACJ;CACD;AAlDYvC,sBAAsB,eALlCD,SAAS,CAAC;EACTyC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,GACW1C,sBAAsB,CAkDlC;SAlDYA,sBAAsB","names":["Component","UpdateProductComponent","constructor","apiService","_snackBar","router","route","fb","myForm","group","name","Validators","required","description","price","stock","brand","category","ngOnInit","queryParams","subscribe","params","productData","JSON","parse","data","updateProductDetails","payload","id","updateProductData","response","updateProductResponse","console","log","showAlert","error","message","open","duration","verticalPosition","horizontalPosition","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css'],\n})\nexport class UpdateProductComponent implements OnInit {\n  data: any;\n  updateProductResponse: any;\n  myForm: FormGroup;\n  constructor(\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n  ) {\n     this.myForm = this.fb.group({\n       name: ['', Validators.required],\n       description: ['', Validators.required],\n       price: ['', Validators.required],\n       stock: ['', Validators.required],\n       brand: ['', Validators.required],\n       category: ['', Validators.required],\n     });\n  }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe((params: any) => {\n      const productData = JSON.parse(params['productData']);\n\n      if (productData) {\n        this.data = productData;\n      }\n    });\n  }\n  updateProductDetails(payload: any, id: number): void {\n    this.apiService.updateProductData(id, payload).subscribe(\n      (response) => {\n        this.updateProductResponse = response;\n        console.log('updated data:', this.updateProductResponse);\n        this.showAlert('Product updated successfully');\n      },\n      (error) => {\n        console.error('Error while updating data:', error);\n        this.showAlert('Error while updating data, Please try again');\n      }\n    );\n  }\n  showAlert(message: string): void {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}