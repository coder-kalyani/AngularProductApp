{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet UpdateProductComponent = class UpdateProductComponent {\n  constructor(apiService, _snackBar, router, route, fb) {\n    this.apiService = apiService;\n    this._snackBar = _snackBar;\n    this.router = router;\n    this.route = route;\n    this.fb = fb;\n    this.myForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      stock: ['', Validators.required],\n      brand: ['', Validators.required],\n      category: ['', Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe(params => {\n      const productData = JSON.parse(params['productData']);\n      if (productData) {\n        this.data = productData;\n        this.myForm.patchValue({\n          title: this.data.title,\n          description: this.data.description,\n          price: this.data.price,\n          stock: this.data.stock,\n          brand: this.data.brand,\n          category: this.data.category\n        });\n      }\n    });\n  }\n  updateProductDetails(id) {\n    if (this.myForm.valid) {\n      const formData = this.myForm.value;\n      console.log('updated form data is >>', formData);\n      this.apiService.updateProductData(id, formData).subscribe(response => {\n        this.updateProductResponse = response;\n        console.log('updated data:', this.updateProductResponse);\n        this.showAlert('Product updated successfully');\n      }, error => {\n        console.error('Error while updating data:', error);\n        this.showAlert('Error while updating data, Please try again');\n      });\n    }\n  }\n  showAlert(message) {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center'\n    });\n  }\n};\nUpdateProductComponent = __decorate([Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css']\n})], UpdateProductComponent);\nexport { UpdateProductComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","UpdateProductComponent","constructor","apiService","_snackBar","router","route","fb","myForm","group","title","required","description","price","stock","brand","category","ngOnInit","queryParams","subscribe","params","productData","JSON","parse","data","patchValue","updateProductDetails","id","valid","formData","value","console","log","updateProductData","response","updateProductResponse","showAlert","error","message","open","duration","verticalPosition","horizontalPosition","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/kalyanip/Documents/AngularProjects/AngularProductApp/products-app/src/app/update-product/update-product.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-update-product',\n  templateUrl: './update-product.component.html',\n  styleUrls: ['./update-product.component.css'],\n})\nexport class UpdateProductComponent implements OnInit {\n  data: any;\n  updateProductResponse: any;\n  myForm: FormGroup;\n  constructor(\n    private apiService: ApiService,\n    private _snackBar: MatSnackBar,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder\n  ) {\n    this.myForm = this.fb.group({\n      title: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', Validators.required],\n      stock: ['', Validators.required],\n      brand: ['', Validators.required],\n      category: ['', Validators.required],\n    });\n  }\n  ngOnInit(): void {\n    this.route.queryParams.subscribe;\n    this.route.queryParams.subscribe((params: any) => {\n      const productData = JSON.parse(params['productData']);\n      if (productData) {\n        this.data = productData;\n        this.myForm.patchValue({\n          title: this.data.title,\n          description: this.data.description,\n          price: this.data.price,\n          stock: this.data.stock,\n          brand: this.data.brand,\n          category: this.data.category,\n        });\n      }\n    });\n  }\n  updateProductDetails(id: number): void {\n    if (this.myForm.valid) {\n      const formData = this.myForm.value;\n      console.log('updated form data is >>', formData);\n      this.apiService.updateProductData(id, formData).subscribe(\n        (response) => {\n          this.updateProductResponse = response;\n          console.log('updated data:', this.updateProductResponse);\n          this.showAlert('Product updated successfully');\n        },\n        (error) => {\n          console.error('Error while updating data:', error);\n          this.showAlert('Error while updating data, Please try again');\n        }\n      );\n    }\n  }\n  showAlert(message: string): void {\n    this._snackBar.open(message, 'Close', {\n      duration: 3000,\n      verticalPosition: 'top',\n      horizontalPosition: 'center',\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}